server:
  port: 9301
spring:
  application:
    name: sharding-dao
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
  #sharding-jdbc配置
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: ds0
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.0.233:3306/test?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
        username: root
        password: oket2020
        #druid 数据源专有配置
        # 初始化大小，最小，最大
        initialSize: 5
        minIdle: 5
        maxActive: 50
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        # 用来检测连接是否有效的sql，要求是一个查询语句
        validationQuery: SELECT 1 FROM DUAL
        # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
        testWhileIdle: true
        # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
        testOnBorrow: false
        # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
        testOnReturn: false
        # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
        poolPreparedStatements: false
    sharding:
      default-data-source-name: ds0
      tables:
        bd_history:
          actual-data-nodes: ds0.bd_history_${2020..2021}_${0..1}
          table-strategy:
            standard:
              #分片列名称
              sharding-column: history_date
              precise-algorithm-class-name: com.labi.shardingdao.config.sharding.algorithm.HistoryPreciseAlgorithm
              range-algorithm-class-name: com.labi.shardingdao.config.sharding.algorithm.HistoryRangeAlgorithm
  #redis配置
  redis:
    host: localhost # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: # Redis服务器连接密码（默认为空）
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000ms # 连接超时时间（毫秒）
#扫描xml文件的位置
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

management:
  health:
    #关闭数据库健康检查
    db:
      enabled: false
